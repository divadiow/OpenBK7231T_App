name: Build App
on:
    push:
        branches:
            - "**"
    pull_request:
        branches:
            - "**"

env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    APP_NAME: ${{ github.event.repository.name }}

jobs:
    refs:
        name: Prepare CI Environment
        runs-on: ubuntu-22.04
        outputs:
            sha_short: ${{ steps.refs.outputs.sha_short }}
            short_ref: ${{ steps.refs.outputs.short_ref }}
            version: ${{ steps.refs.outputs.version }}
            new_release: ${{ steps.refs.outputs.new_release }}
        steps:
            - name: Source checkout
              uses: actions/checkout@v4
            - name: Update SDKs if required
              run: make update-submodules
            - name: Semantic Release
              id: semantic
              uses: cycjimmy/semantic-release-action@v4
              with:
                  dry_run: true
                  semantic_version: 21
                  extra_plugins: |
                      @semantic-release/changelog
                      @semantic-release/git
                      conventional-changelog-conventionalcommits@7
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Set outputs
              id: refs
              run: |
                  export BRANCH=${GITHUB_REF#refs/*/}
                  echo "branch: ${BRANCH}"
                  export BRANCHTRANSLATED=$(echo ${BRANCH} | tr '/' '_')
                  echo "short_ref: ${BRANCHTRANSLATED}"
                  export VERSION=""
                  if ${{ steps.semantic.outputs.new_release_published == 'true' }}; then
                    export VERSION=${{ steps.semantic.outputs.new_release_version }}
                  else
                    export VERSION=${BRANCHTRANSLATED}_$(git rev-parse --short=12 HEAD)
                  fi
                  echo "new_release=${{ steps.semantic.outputs.new_release_published }}" >> $GITHUB_OUTPUT
                  echo "short_ref=${BRANCHTRANSLATED}" >> $GITHUB_OUTPUT
                  echo "sha_short=SHA-$(git rev-parse --short=12 HEAD)" >> $GITHUB_OUTPUT
                  echo "version=${VERSION}" >> $GITHUB_OUTPUT

    build_txw81x:
        name: Build TXW81X
        needs: refs
        runs-on: windows-latest
        defaults:
            run:
                shell: wsl-bash {0}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: OpenTXW81X
                      variant: default
        steps:
            - name: Source checkout
              uses: actions/checkout@v4
            - uses: Vampire/setup-wsl@v6
              with:
                  wsl-version: 1
                  distribution: Ubuntu-22.04
                  additional-packages: make
            - name: Run make
              run: |
                  make APP_VERSION=${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }} APP_NAME=${{ matrix.platform }} VARIANT="${{ matrix.variant }}" ${{ matrix.platform }}
            - name: Save build assets
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ env.APP_NAME }}_${{ needs.refs.outputs.version }}_${{ matrix.platform }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}
                  path: |
                      output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
                  if-no-files-found: warn

    merge:
        name: Merge Artifacts
        runs-on: ubuntu-22.04
        needs: [build_txw81x]
        #if: always() && needs.refs.outputs.new_release == 'true' && (github.ref == 'refs/heads/main' || github.ref_name == 'alpha')
        steps:
            - name: Merge Artifacts
              uses: actions/upload-artifact/merge@v4
              with:
                  name: ${{ env.APP_NAME }}_${{ needs.refs.outputs.version }}
                  #delete-merged: true

    release:
        name: Semantic Release Images and Artifacts
        runs-on: ubuntu-22.04
        needs: [merge, refs]
        if: always() && needs.refs.outputs.new_release == 'true' && (github.ref == 'refs/heads/main' || github.ref_name == 'alpha')
        steps:
            - name: Source checkout
              uses: actions/checkout@v4
            - name: Fetch build assets
              uses: actions/download-artifact@v4
              with:
                  name: ${{ env.APP_NAME }}_${{ needs.refs.outputs.version }}
                  path: output/${{ needs.refs.outputs.version }}
            - name: Run Semantic Release
              id: semantic
              uses: cycjimmy/semantic-release-action@v4
              with:
                  dry_run: false
                  semantic_version: 21
                  extra_plugins: |
                      @semantic-release/changelog
                      @semantic-release/git
                      conventional-changelog-conventionalcommits@7
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Echo Semantic Release Versions
              if: steps.semantic.outputs.new_release_published == 'true'
              run: |
                  echo ${{ steps.semantic.outputs.new_release_version }}
                  echo ${{ steps.semantic.outputs.new_release_major_version }}
                  echo ${{ steps.semantic.outputs.new_release_minor_version }}
                  echo ${{ steps.semantic.outputs.new_release_patch_version }}
